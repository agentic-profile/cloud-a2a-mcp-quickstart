import { create } from 'zustand';
import { persist } from 'zustand/middleware';
import type { JWKSet } from '@agentic-profile/common/schema';

/* Type for the keyring structure based on what's generated by createEdDsaJwk()
export interface ImportKeyring {
    publicJwk: any; // The public JWK key
    privateJwk?: any; // The private JWK key (optional for security)
    [key: string]: any; // Allow for additional properties
}*/

interface OnSuccessAction {
    page: string
}

interface ImportIdentityState {
    exportKeyring: JWKSet | null;
    identityHostUrl: string;
    onSuccessAction: OnSuccessAction | null;
    setExportKeyring: (exportKeyring: JWKSet | null) => void;
    setIdentityHostUrl: (url: string) => void;
    clearExportKeyring: () => void;
    setOnSuccessAction: (action: OnSuccessAction | null) => void;
}

export const useImportIdentityStore = create<ImportIdentityState>()(
    persist(
        (set) => ({
            exportKeyring: null,
            identityHostUrl: 'https://matchwise.ai/import',
            onSuccessAction: null,
            setExportKeyring: (exportKeyring) => set({ exportKeyring }),
            setIdentityHostUrl: (url) => set({ identityHostUrl: url }),
            clearExportKeyring: () => set({ exportKeyring: null }),
            setOnSuccessAction: (action) => set({ onSuccessAction: action }),
        }),
        {
            name: 'import-identity-storage',
        }
    )
);
